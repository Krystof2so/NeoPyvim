---@diagnostic disable: undefined-global

local M = {}

function M.setup()
    local fzf_functions = require("plugins.spec_functions.fzf_functions")
    local project_functions = require("plugins.spec_functions.project_python_env")
    local alpha = require("alpha")
    local dashboard = require("alpha.themes.dashboard")

    -- Fonction pour cr√©er des boutons
    local function create_button(shortcut, label, command)
        return dashboard.button(shortcut, label, command)
    end

    -- Configuration des sections
    dashboard.section.header.val = {
        [[                                                                                              ]],
        [[  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà                   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà             ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà                 ]],
        [[ ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà                   ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà           ‚ñë‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñë‚ñë                  ]],
        [[  ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ]],
        [[  ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ]],
        [[  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñë‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ]],
        [[  ‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà         ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë    ‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ]],
        [[  ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà        ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñë‚ñë‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà]],
        [[ ‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë          ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà      ‚ñë‚ñë‚ñë      ‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë ]],
        [[                                                 ‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà                                     ]],
        [[                                                ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                      ]],
        [[                                                 ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë                                       ]],
        [[                                                                                              ]],
    }

    dashboard.section.header.opts = {
        position = "center",
        hl = "MyAsciiHeader"  -- Appliquer la couleur d√©finie
    }

    -- Section pour afficher la date et l'heure en fran√ßais
    dashboard.section.datetime = {
        type = "text",
        val = function()
            -- Tableaux pour les jours et mois en fran√ßais :
            local fr_days = { "Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi" }
            local fr_months = { "janvier", "f√©vrier", "mars", "avril", "mai", "juin", "juillet", "ao√ªt", "septembre", "octobre", "novembre", "d√©cembre" }
            -- R√©cup√®re le jour de la semaine et le mois et l'ann√©e actuels:
            local date = os.date("*t")
            local week_day = fr_days[date.wday]    -- Jour de la semaine
            local month = fr_months[date.month]    -- Mois de l'ann√©e
            -- Format final de la date en fran√ßais :
            return string.format("üìÖ  %s %d %s %d  üïí  %s", week_day, date.day, month, date.year, os.date("%H:%M"))
        end,
        opts = {
            position = "center",
            hl = "Constant"  -- Style de mise en valeur
        }
    }

    -- Configuration des boutons du menu
    dashboard.section.buttons.val = {
        create_button("f", "üîç  Rechercher fichier (r√©pertoire courant)", ":FzfLua files<CR>"),
        create_button("d", "üìÇ  Rechercher fichier dans un r√©pertoire", function()
            fzf_functions.search_in_directory()
        end),
        create_button("r", "‚åõ  Fichiers r√©cemment ouverts", ":FzfLua oldfiles<CR>"),
        create_button("x", "üîé  Lancer une recherche avec 'fzf'", ":FzfLua builtin<CR>"),
        create_button("e", "üóÉÔ∏è  Ouvre l'explorateur de fichiers", ":NvimTreeToggle<CR>"),
        create_button("c", "üêç  Cr√©er un projet Python (avec 'venv')", function()
            require("pyflowenv").create_python_project()
        end),
        create_button("p", "üí§  Ouvre le gestionnaire de plugins", ":Lazy<CR>"),
        create_button("h", "üÜò  Aide (recherche avec tags)", ":FzfLua helptags<CR>"),
        create_button("q", "‚ùå  Quitter", ":qa<CR>"),
    }

    -- Configuration des options
    dashboard.opts = {
        layout = {
            dashboard.section.header,
            { type = "padding", val = 1 },
            dashboard.section.datetime,
            { type = "padding", val = 2 },
            dashboard.section.buttons,
        },
        keymap = {
            press = '<CR>',
        },
    }

    vim.cmd([[highlight MyAsciiHeader guifg=#a3be8c]])  -- D√©finir la couleur de l'en-t√™te ASCII
    alpha.setup(dashboard.opts)
end


return M

